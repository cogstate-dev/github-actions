name: 'Fix NuGet Feeds'
description: 'Fix NuGet feeds by running a PowerShell script.'
author: 'Mike Burgess'
inputs:
  NUGET_PUBLISH:
    description: 'NuGet Publish setting.'
    required: true
  NUGET_SOURCE:
    description: 'NuGet Source setting.'
    required: true
  NUGET_LIBRARY:
    description: 'NuGet Library setting.'
    required: true
  PROGET_API_KEY:
    description: 'API key for NuGet.'
    required: true
runs:
  using: 'composite'
  steps:
    - name: Set working directory
      run: cd ${{ github.workspace }}/.github/Composite-Actions/Fix-Nuget-Feeds
      shell: |
        pwsh

    - name: Check PowerShell script existence
      run: |
        $scriptPath = ".\powershell\scripts\set-nugetfeeds.ps1"
        get-childitem -recurse -directory
        if (Test-Path $scriptPath) {
            # Script exists, proceed with execution
            . $scriptPath -nugetPublish $env:NUGET_PUBLISH -nugetSource $env:NUGET_SOURCE -nugetLibrary $env:NUGET_LIBRARY -nugetApiKey $env:PROGET_API_KEY -nugetConfigFullPath "$PWD\nuget.config"
        } else {
            Write-Error "PowerShell script not found at $scriptPath"
        }
      shell: pwsh

    # - run: |
    #     ./Powershell/scripts/set-nugetfeeds.ps1 -nugetPublish ${{ inputs.NUGET_PUBLISH }} -nugetSource ${{ inputs.NUGET_SOURCE }} -nugetLibrary ${{ inputs.NUGET_LIBRARY }} -nugetApiKey ${{ inputs.PROGET_API_KEY }} -nugetConfigFullPath "${{ github.workspace }}\nuget.config"
    #   shell: |
    #     pwsh -noninteractive -command "try { $ErrorActionPreference='Stop'; . '{0}' } catch { Write-Error ""FAILED: $_""; throw; } if ((Test-Path -LiteralPath variable:\LASTEXITCODE)) { exit $LASTEXITCODE }"