name: 'Fix NuGet Feeds'
description: 'Fix NuGet feeds by running a PowerShell script.'
author: 'Mike Burgess'
inputs:
  NUGET_PUBLISH:
    description: 'NuGet Publish setting.'
    required: true
  NUGET_SOURCE:
    description: 'NuGet Source setting.'
    required: true
  NUGET_LIBRARY:
    description: 'NuGet Library setting.'
    required: true
  PROGET_API_KEY:
    description: 'API key for NuGet.'
    required: true
  SOLUTION_FILE:
    description: 'Optional Solution File if you want to run a restore'
    required: false
runs:
  using: 'composite'
  steps:
    - name: Install Nuget
      uses: nuget/setup-nuget@v1
      with:
        # nuget-version: '4.6.2'
        nuget-api-key: ${{ inputs.PROGET_API_KEY }}

    - name: test then run set-nugetfeeds.ps1
      if: ${{ inputs.SOLUTION_FILE == null || inputs.SOLUTION_FILE == '' }}
      run: |
        ${{ github.action_path }}/../../../Powershell/Scripts\set-nugetfeeds.ps1 -nugetPublish "${{ inputs.NUGET_PUBLISH }}" -nugetSource "${{ inputs.NUGET_SOURCE }}" -nugetLibrary "${{ inputs.NUGET_LIBRARY }}" -nugetApiKey "${{ inputs.PROGET_API_KEY }}" -nugetConfigFullPath "${{ github.workspace }}\nuget.config"
      shell: |
        pwsh -noninteractive -command "try {{ $ErrorActionPreference='Stop'; . '{0}' }} catch {{ Write-Error ""FAILED: $_""; throw; }} if ((Test-Path -LiteralPath variable:\LASTEXITCODE)) {{ exit $LASTEXITCODE }}"

    - name: test then run set-nugetfeeds.ps1
      if: ${{ inputs.SOLUTION_FILE && inputs.SOLUTION_FILE != ''}}
      run: |
        ${{ github.action_path }}/../../../Powershell/Scripts\set-nugetfeeds.ps1 -nugetPublish "${{ inputs.NUGET_PUBLISH }}" -nugetSource "${{ inputs.NUGET_SOURCE }}" -nugetLibrary "${{ inputs.NUGET_LIBRARY }}" -nugetApiKey "${{ inputs.PROGET_API_KEY }}" -nugetConfigFullPath "${{ github.workspace }}\nuget.config" -solutionFile ${{ inputs.SOLUTION_FILE }}
      shell: |
        pwsh -noninteractive -command "try {{ $ErrorActionPreference='Stop'; . '{0}' }} catch {{ Write-Error ""FAILED: $_""; throw; }} if ((Test-Path -LiteralPath variable:\LASTEXITCODE)) {{ exit $LASTEXITCODE }}"