name: 'Set Branch Variables'
description: 'Set up variables based on branch names'
inputs:
  branch-name:
    description: 'The name of the branch'
    required: true
runs:
  using: 'composite'
  steps:
    - uses: KyoriPowered/action-regex-match@v3
      id: branch-regex
      with:
        text: ${{ env.BRANCH_NAME }}
        regex: '(?:.+?)?(?:(?:feature|release)\/(\d+\.\d+\.\d+))\/?([?a-zA-Z]+-\d+)?$'

    - name: Set dev varaibles
      id: set-dev-variables
      if: contains(env.BRANCH_NAME,'feature')
      run: |
       echo "BUILD_TYPE=dev" >> $GITHUB_ENV   
       echo "BUILD_CONFIG=Debug" >> $GITHUB_ENV
       echo "NUGET_PUBLISH=https://proget.cogstate.com/nuget/cogstate-releases-dev/" >> $GITHUB_ENV
       echo "NUGET_SOURCE=https://proget.cogstate.com/nuget/nuget-dev/" >> $GITHUB_ENV
       echo "NUGET_LIBRARY=https://proget.cogstate.com/nuget/cogstate-library-nuget-dev/" >> $GITHUB_ENV
      shell: bash

    - name: Set dev version
      id: set-dev-version
      if: contains(env.BRANCH_NAME,'feature')
      run: |
       echo "preversion=${{ steps.branch-regex.outputs.group1 }}-${{ env.BUILD_TYPE }}.${{ steps.branch-regex.outputs.group2 }}.${{ github.run_number }}${{ github.run_attempt }}" >> $GITHUB_ENV
      shell: bash

    - name: Set rc variables
      id: set-rc-variables
      if: contains(env.BRANCH_NAME,'release')
      run: |
       echo "preversion=${{ steps.branch-regex.outputs.group1 }}-${{ env.BUILD_TYPE }}.${{ github.run_number }}${{ github.run_attempt }}" >> $GITHUB_ENV
      shell: bash

    - name: Set output variables
      id: set-vars
      run: |
       echo "version=${{ env.preversion }}" >> $GITHUB_OUTPUT  
       echo "build-config=${{ env.BUILD_CONFIG }}" >> $GITHUB_OUTPUT  
       echo "build-type=${{ env.BUILD_TYPE }}" >> $GITHUB_OUTPUT
       echo "nuget-publish=${{ env.NUGET_PUBLISH }}" >> $GITHUB_OUTPUT
       echo "nuget-source=${{ env.NUGET_SOURCE }}" >> $GITHUB_OUTPUT
       echo "nuget-library=${{ env.NUGET_LIBRARY }}" >> $GITHUB_OUTPUT
      shell: bash
